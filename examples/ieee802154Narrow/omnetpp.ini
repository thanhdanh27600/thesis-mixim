[General]
cmdenv-config-name = 
cmdenv-event-banners = true
cmdenv-module-messages = true

cmdenv-runs-to-execute = 
network = ieee802154Narrow
tkenv-image-path = ../../images;

sim-time-limit = 100s


##########################################################
#			Simulation parameters                        #
##########################################################
tkenv-default-config = 
*.**.coreDebug = false
*.**.debug = false
*.playgroundSizeX = 500m
*.playgroundSizeY = 500m
*.playgroundSizeZ = 300m
*.numHosts = 3

##########################################################
#			WorldUtility parameters                      #
##########################################################
*.world.useTorus = false

##########################################################
#			         channel parameters                  #
##########################################################
*.connectionManager.sendDirect = false
*.connectionManager.pMax = 1.1mW
*.connectionManager.sat = -100dBm
*.connectionManager.alpha = 2.5
*.connectionManager.carrierFrequency = 2.4E+9Hz

################ PhyLayer parameters #####################
*.node[*].nic.phy.usePropagationDelay = false
 
*.node[*].nic.phy.analogueModels = xmldoc("config.xml")
*.node[*].nic.phy.sensitivity = -100dBm
*.node[*].nic.phy.maxTXPower = 1.1mW
*.node[*].nic.phy.initialRadioState = 0
*.node[*].nic.phy.useThermalNoise = true


################ MAC layer parameters ####################
*.node[*].nic.mac.notAffectedByHostState = true

################ NETW layer parameters ####################


################ Mobility parameters #####################

**.node[*].mobility.initFromDisplayString = false

*.node[0].mobility.initialX = 200m
*.node[0].mobility.initialY = 300m
*.node[0].mobility.initialZ = 100m

*.node[1].mobility.initialX = 300m
*.node[1].mobility.initialY = 300m
*.node[1].mobility.initialZ = 100m

*.node[2].mobility.initialX = 400m
*.node[2].mobility.initialY = 300m
*.node[2].mobility.initialZ = 100m

*.node[*].mobility.speed = 0

*.node[*].netwl.headerLength = 16bit
*.node[*].netwl.packetLength = 24880bit
**.netwl.packetTime = 0.1s
**.netwl.packetsPerPacketTime = 0.15

*.world.bitrate = 250000

**.battery.nominal = 99999mAh
**.battery.capacity = 99999mAh
**.battery.voltage = 3.3V
**.battery.resolution = 0.1s
**.battery.publishDelta = 1
**.battery.publishTime = 0
**.battery.numDevices = 1

**.batteryStats.detail = false
**.batteryStats.timeSeries = false


#################################################
# Test 1
# these tests produce the usage statistics of the channel
# for different configurations. Usage statistics means
# how much of the channels possible maximum capacity is
# used at which amount of generated traffic.
# 
# The results of this tests are visualized by "Test1.anf"
# and show plots of the generated traffic against the received
# traffic where both values are normalized against bitrate
# and simulation time.
##################################################
[Config Test1-A]
description = "increasing number of hosts, unbursted, with queue"
*.playgroundSizeX = 10m
*.playgroundSizeY = 10m
*.numHosts = ${2..40 step 2}
*.node[*].mobility.initialX = uniform(0m, 10m)
*.node[*].mobility.initialY = uniform(0m, 10m)
*.node[*].mobility.initialZ = uniform(0m, 10m)
*.node[*].mobility.speed = 0
**.netwl.packetsPerPacketTime = 0.1

[Config Test1-B]
description = "increasing send rate per host, unbursted, with queue"
*.playgroundSizeX = 10m
*.playgroundSizeY = 10m
*.numHosts = 10
*.node[*].mobility.initialX = uniform(0m, 10m)
*.node[*].mobility.initialY = uniform(0m, 10m)
*.node[*].mobility.initialZ = uniform(0m, 10m)
*.node[*].mobility.speed = 0
**.netwl.packetsPerPacketTime = ${0.02..0.4 step 0.02}
**.netwl.burstSize = 1
**.mac.queueLength = 100

[Config Test1-C]
extends = Test1-B
description = "increasing send rate per host, bursted, with queue"
**.netwl.burstSize = 3

[Config Test1-D]
extends = Test1-C
description = "increasing send rate per host, bursted, without queue"
**.mac.queueLength = 0

[Config Test1-E]
extends = Test1-B
description = "increasing send rate per host, unbursted, without queue"
**.mac.queueLength = 0


##################################################
# Test 2
# These test configurations are meant to show the effect
# of MAC-ACKS on the usage of the channel with increasing
# distance between the hosts.
# Test2-C further shows the effect of the hidden station
# problem on CSMA.
#
# The results can be visualized by "Test2.anf" and show
# plots of channel usage at different distances.
##################################################
[Config Test2-A]
description = "one sending host moving towards sink, with mac-acks"
sim-time-limit = 300s
#record-eventlog = true
*.playgroundSizeX = 500m
*.playgroundSizeY = 500m
*.numHosts = 2
*.node[0].mobility.initialX = 350m
*.node[0].mobility.initialY = 250m
*.node[1].mobility.initialX = 350m - ${dist=110..300 step 5}m #${dist=40..160 step 40, 180..220 step 2, 230,240}m
*.node[1].mobility.initialY = 250m
*.node[*].mobility.speed = 0

*.node[0].netwl.burstSize = 0
*.node[1].netwl.burstSize = 1
*.node[1].netwl.destination = 0
#*.node[1].nic.phy.coreDebug = true
**.netwl.packetsPerPacketTime = 0.25

*.world.bcTraffic = false

[Config Test2-B]
extends = Test2-A
description = "one sending host moving towards sink, without mac-acks"
*.node[1].netwl.destination = 0
*.node[*].nic.mac.useMACAcks = false
*.world.bcTraffic = false

[Config Test2-C]
extends = Test2-A
description = "one sending host stationary in range of sink (hidden station), \
			   one host moving towards sink and stationary sender,\
			   with mac ACKS"
*.numHosts = 3
**.netwl.packetsPerPacketTime = 0.125
*.node[2].mobility.initialX = 480m
*.node[2].mobility.initialY = 250m
*.node[2].netwl.burstSize = 1
*.node[2].netwl.destination = 0
*.node[1].netwl.destination = 0

######################################################
# Test 3
# This tests is meant to show that CSMA uses exponential backoffs.
# This is done by increasing the number of hosts in the network exponentially.
# While the average backoff duration of each hosts should increase
# exponentially, the average number of backoffs should increase linearly.
#
# The results of this tests are visualized by "Test3.anf".
######################################################
[Config Test3]
description = "quadratic increasing number of hosts results in linear increase of backoffs"
sim-time-limit = ${numHosts}s
*.playgroundSizeX = 10m
*.playgroundSizeY = 10m
*.numHosts = ${numHosts=2,4,8,16,32,64,128,256}
*.node[*].mobility.initialX = uniform(0m, 10m)
*.node[*].mobility.initialY = uniform(0m, 10m)
*.node[*].mobility.initialZ = uniform(0m, 10m)
*.node[*].mobility.speed = 0
**.netwl.packetsPerPacketTime = 1/${numHosts}
*.node[*].nic.mac.macMinBE = 1
*.node[*].nic.mac.macMaxBE = 8
*.node[*].nic.mac.macMaxCSMABackoffs = 20
*.node[*].nic.mac.aUnitBackoffPeriod = 0.1s
*.connectionManager.sendDirect = true
**.netwl.burstSize = 2
