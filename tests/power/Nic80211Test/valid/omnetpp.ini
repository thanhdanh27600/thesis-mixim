[General]
ned-path = ../../../src;../..
user-interface = Cmdenv
;ini-warnings = true
network = sim
seed-0-mt = 897054849
sim-time-limit = 500

[Tkenv]
bitmap-path="../../bitmaps"
default-run=1
use-mainwindow = yes
print-banners = no
slowexec-delay = 300ms
update-freq-fast = 10
update-freq-express = 100
breakpoints-enabled = yes

[Cmdenv]
express-mode=yes
performance-display=yes        
runs-to-execute = 1

#event-banners = no
#module-messages = yes

[DisplayStrings]

[OutVectors]
; by default, just record the primary time series
sim.host[*].batteryStats.capacity(relative).enabled = yes
sim.host[*].batteryStats.*.enabled = no

[Parameters]

##############################################################################
#       Parameters for the entire simulation                                 #
##############################################################################

sim.playgroundSizeX = 500
sim.playgroundSizeY = 500
sim.numHosts = 20

# uncomment to enable debug messages for all modules
# **.debug = 0
**.coreDebug = 0


##############################################################################
#       Parameters for the ChannelControl                                    #
##############################################################################
sim.channelcontrol.carrierFrequency = 2.4e+9

# max transmission power [mW]
sim.channelcontrol.pMax  = 110.11 
# signal attenuation threshold [dBm]
sim.channelcontrol.sat   = -120
# path loss coefficient alpha
sim.channelcontrol.alpha = 4
sim.channelcontrol.sendDirect = 0
sim.channelcontrol.useTorus = 0


##############################################################################
#       Parameters for the Mobility Module                                   #
##############################################################################

# debug switch
sim.host[*].mobility.debug = 0

# if set to 0 the MN does not move
sim.host[*].mobility.speed          = 0
sim.host[*].mobility.updateInterval = 0.1

##############################################################################
#       Parameters for the Host                                              #
##############################################################################
sim.host[*].mobility.initialX = 1m/0
sim.host[*].mobility.initialY = 1m/0
sim.host[*].color = "white"
sim.host[*].appendDisplay = "b=20,20,oval;o=blue,black,2"

##############################################################################
#       Parameters for the Application Layer                                 #
##############################################################################

# debug switch
sim.host[*].appl.debug = 0
sim.host[*].appl.headerLength=1024
sim.host[*].appl.burstSize=7


##############################################################################
#       Parameters for the Network Layer                                     #
##############################################################################
sim.host[*].net.headerLength=32; in bits
sim.host[*].net.debug = 0

##############################################################################
#       Parameters for ARP
##############################################################################
sim.host[*].arp.debug = 0

##############################################################################
#       Parameters for the Mac Layer                                         #
##############################################################################

# debug switch

sim.host[*].nic.mac.debug = 0
sim.host[*].nic.mac.headerLength=272
sim.host[*].nic.mac.queueLength=14
sim.host[*].nic.mac.bitrate=2E+6; in bits/second
sim.host[*].nic.mac.defaultChannel=0
sim.host[*].nic.mac.autoBitrate=0

### values if no fading is modelled, gives at most 1% packet error rate
sim.host[*].nic.mac.snr2Mbit=1.46   
sim.host[*].nic.mac.snr5Mbit=2.6
sim.host[*].nic.mac.snr11Mbit=5.68

sim.host[*].nic.mac.rtsCtsThreshold=0
sim.host[*].nic.mac.neighborhoodCacheSize=30
sim.host[*].nic.mac.neighborhoodCacheMaxAge=100

##############################################################################
#       Parameters for the radio
##############################################################################

sim.host[*].nic.radio.swSleep = 0
sim.host[*].nic.radio.swSend = 0
sim.host[*].nic.radio.swRecv = 0
sim.host[*].nic.radio.debug = 0

##############################################################################
#       Parameters for the Decider                                           #
##############################################################################

# debug switch
sim.host[*].nic.decider.debug = 0
sim.host[*].nic.decider.snirThreshold=-9; in dB

##############################################################################
#       Parameters for the SnrEval                                           #
##############################################################################

# debug switch
sim.host[*].nic.snrEval.debug = 0
sim.host[*].nic.snrEval.coreDebug = 0
sim.host[*].nic.snrEval.publishRSSIAlways = 0
sim.host[*].nic.snrEval.headerLength=192
sim.host[*].nic.snrEval.transmitterPower=110.11; [mW]
sim.host[*].nic.snrEval.carrierFrequency=2.4E+9
sim.host[*].nic.snrEval.thermalNoise=-110
sim.host[*].nic.snrEval.sensitivity=-119.5
sim.host[*].nic.snrEval.pathLossAlpha=4

##############################################################################
#       Battery consumption parameters (NIC, battery, batteryStats)x
##############################################################################

sim.host[*].batteryStats.debug = 0; 	
sim.host[*].batteryStats.detail = 1; 	
sim.host[*].batteryStats.timeSeries = 1; 	

sim.host[*].battery.publishDelta = 0    ; every change
sim.host[*].battery.publishTime = 0     ; no timeout

sim.host[*].battery.debug = 0           ;
sim.host[*].battery.resolution = 1.0s   ; lifetime precision
sim.host[*].battery.voltage = 1         ; BatteryModule2.0 has no voltage
sim.host[*].battery.capacity = 5.555555555555555 ; equiv to 20/30K in AFOrig
sim.host[*].battery.nominal =  8.333333333333334 ; 


# NIC parameters relatively prime for test case...
sim.host[*].nic.sleepCurrent = 3
sim.host[*].nic.idleCurrent = 5
sim.host[*].nic.rxCurrent = 7
sim.host[*].nic.txCurrent = 11


##############################################################################
#       Test runs
##############################################################################


# two hosts in range, each sends one bcast and one unicast reply
[Run 1]
output-vector-file = omnetpp_1.vec
sim.numHosts = 2
sim.host[0].mobility.initialY = 100m
sim.host[0].mobility.initialX = 100m	
sim.host[1].mobility.initialY = 150m
sim.host[1].mobility.initialX = 100m	
sim.host[*].appl.burstSize=1
sim-time-limit = 10

# two hosts out of range; each sends one broadcast, frame not detected
[Run 2]
output-vector-file = omnetpp_2.vec
sim.numHosts = 2
sim.host[0].mobility.initialY = 100m
sim.host[0].mobility.initialX = 100m	
sim.host[1].mobility.initialY = 400m
sim.host[1].mobility.initialX = 400m	
sim.host[*].appl.burstSize=1
sim-time-limit = 10

# two hosts out of range; each sends one broadcast, only error is received
[Run 3]
output-vector-file = omnetpp_3.vec
sim.numHosts = 2
sim.host[0].mobility.initialY = 100m
sim.host[0].mobility.initialX = 100m	
sim.host[1].mobility.initialY = 350m
sim.host[1].mobility.initialX = 100m
sim.host[*].appl.burstSize=1
sim-time-limit = 10

# check battery depletion and host failure notification (no depletion)

[Run 4]
output-vector-file = omnetpp_4.vec
sim.numHosts = 3
sim.host[0].mobility.initialY = 100m
sim.host[0].mobility.initialX = 100m	
sim.host[1].mobility.initialY = 150m
sim.host[1].mobility.initialX = 100m	
sim.host[2].mobility.initialY = 100m
sim.host[2].mobility.initialX = 150m
sim.host[*].appl.debug = 1
sim.host[*].appl.burstSize=100
sim.host[*].nic.mac.queueLength=301
sim.host[*].battery.nominal =  1.0 ; 
sim.host[2].battery.capacity = 1.0 ;  battery will be not depleted
sim.host[*].battery.capacity = 1.0 ; 
sim.host[*].nic.rxCurrent = 1700         ;
sim.host[*].nic.txCurrent = 2100        ;

sim.host[*].batteryStats.capacity(relative).enabled = yes
sim.host[*].battery.publishDelta = 1            ; no
sim.host[*].battery.publishTime = 0.1           ; 
sim-time-limit = 10

# check battery depletion and host failure notification (depleted early)
[Run 5]
output-vector-file = omnetpp_5.vec
sim.numHosts = 3
sim.host[0].mobility.initialY = 100m
sim.host[0].mobility.initialX = 100m	
sim.host[1].mobility.initialY = 150m
sim.host[1].mobility.initialX = 100m	
sim.host[2].mobility.initialY = 100m
sim.host[2].mobility.initialX = 150m
sim.host[*].appl.debug = 1
sim.host[*].appl.burstSize=100
sim.host[*].nic.mac.queueLength=301
sim.host[*].battery.nominal =  1.0 ; 
sim.host[2].battery.capacity = 0.1 ;  battery depleted before its burst
sim.host[*].battery.capacity = 1.0 ; 
sim.host[*].nic.rxCurrent = 1700        ;
sim.host[*].nic.txCurrent = 2100        ;
sim-time-limit = 10


# check battery depletion and host failure notification (depleted late)
[Run 6]
output-vector-file = omnetpp_6.vec
sim.numHosts = 3
sim.host[0].mobility.initialY = 100m
sim.host[0].mobility.initialX = 100m	
sim.host[1].mobility.initialY = 150m
sim.host[1].mobility.initialX = 100m	
sim.host[2].mobility.initialY = 100m
sim.host[2].mobility.initialX = 150m
sim.host[*].appl.debug = 1
sim.host[*].appl.burstSize=100
sim.host[*].nic.mac.queueLength=301
sim.host[*].battery.nominal =  1.0 ; 
sim.host[2].battery.capacity = 0.3 ;  battery depleted after its burst
sim.host[*].battery.capacity = 1.0 ; 
sim.host[*].nic.rxCurrent = 1700        ;
sim.host[*].nic.txCurrent = 2100        ;
sim-time-limit = 10

# check battery depletion and host failure notification (during idle)
[Run 7]

output-vector-file = omnetpp_7.vec
sim.numHosts = 3
sim.host[0].mobility.initialY = 100m
sim.host[0].mobility.initialX = 100m	
sim.host[1].mobility.initialY = 150m
sim.host[1].mobility.initialX = 100m	
sim.host[2].mobility.initialY = 100m
sim.host[2].mobility.initialX = 150m
sim.host[*].appl.debug = 1
sim.host[*].appl.burstSize=1;
sim.host[*].nic.mac.queueLength=301
sim.host[*].battery.resolution = 0.1s   ; precision of host lifetime
sim.host[*].battery.nominal =  1.0 ; 
sim.host[2].battery.capacity = 0.5 ;  
sim.host[*].battery.capacity = 1.0 ; 
sim.host[*].nic.idleCurrent = 500 ;  
sim.host[*].nic.rxCurrent = 1;
sim.host[*].nic.txCurrent = 2;
sim-time-limit = 10


# compare with AFTest (when idle and rxCurrent are equal, should be equivalent)
[Run 8]
sim.host[*].nic.idleCurrent = 8
sim.host[*].nic.rxCurrent = 8
sim.host[*].nic.txCurrent = 8
sim.host[*].battery.publishDelta = 1            ; none
sim.host[*].battery.publishTime = 0.250         ; 20 hosts * 4 data/sec * 500 sec
sim.host[*].batteryStats.capacity(relative).enabled = yes
output-vector-file = omnetpp_80211.vec

# 802.11 with realistic battery and nic parameters (see also networks/80211Battery)
[Run 9]
# appl parameters
sim.host[*].appl.burstSize=10
sim.host[*].nic.mac.queueLength=50

# Marvell 88W8686 low power IEEE 802.11 chipset
include omnetpp_wifi_lowpow.ini

# output parameters
output-vector-file = omnetpp.10.vec
sim.host[*].batteryStats.capacity(relative).enabled = yes
sim.host[*].battery.resolution = 1.0s   ; precision of host lifetime
sim.host[*].battery.publishDelta = 1    ; none
sim.host[*].battery.publishTime = 0.250s; ;       
sim-time-limit = 15

# double burst size compared to previous run, check that SEND and RECV 
# energy also (approximately) doubles
[Run 10]

# appl parameters
sim.host[*].appl.burstSize=20
sim.host[*].nic.mac.queueLength=100

# Marvell 88W8686 low power IEEE 802.11 chipset
include omnetpp_wifi_lowpow.ini

# output parameters
output-vector-file = omnetpp.20.vec
sim.host[*].batteryStats.capacity(relative).enabled = yes
sim.host[*].battery.resolution = 1.0s   ; precision of host lifetime
sim.host[*].battery.publishDelta = 1    ; none
sim.host[*].battery.publishTime = 0.250s  ;
sim-time-limit = 15


