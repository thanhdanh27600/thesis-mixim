[General]
user-interface = Cmdenv
network = Nic80211PowerTest
cmdenv-event-banner-details = false
cmdenv-message-trace = true
seed-0-mt = 897054849
sim-time-limit = 500s

# tkenv-default-run = 1
# breakpoints-enabled = true

cmdenv-express-mode = true
cmdenv-performance-display = true        
# cmdenv-runs-to-execute = 1

cmdenv-event-banners = true
cmdenv-module-messages = true

output-scalar-precision = 12
output-vector-precision = 12


# by default, just record the primary time series
*.host[*].batteryStats.capacity(relative).vector-recording = true
*.host[*].batteryStats.*.vector-recording = false


##############################################################################
#       Parameters for the entire simulation                                 #
##############################################################################

*.playgroundSizeX = 500m
*.playgroundSizeY = 500m
*.numHosts = 20

# uncomment to enable debug messages for all modules
**.debug = true
**.coreDebug = true


##############################################################################
#       Parameters for the ChannelControl                                    #
##############################################################################
*.connectionManager.carrierFrequency = 2.4e+9Hz

# max transmission power [mW]
*.connectionManager.pMax = 110.11 mW
# signal attenuation threshold [dBm]
*.connectionManager.sat = -120dBm
# path loss coefficient alpha
*.connectionManager.alpha = 4
*.connectionManager.sendDirect = false
*.world.useTorus = false
*.world.use2D = true


##############################################################################
#       Parameters for the Mobility Module                                   #
##############################################################################

# debug switch
*.host[*].mobility.debug = false

# if set to 0 the MN does not move
*.host[*].mobility.speed = 0
*.host[*].mobility.updateInterval = 0.1s
*.host[*].mobility.initFromDisplayString = false
*.host[*].mobility.constraintAreaMinX = 0m
*.host[*].mobility.constraintAreaMinY = 0m
*.host[*].mobility.constraintAreaMaxX = 500m
*.host[*].mobility.constraintAreaMaxY = 500m


##############################################################################
#       Parameters for the Host                                              #
##############################################################################
*.host[*].color = "white"
*.host[*].appendDisplay = "b=20,20,oval;o=blue,black,2"

##############################################################################
#       Parameters for the Application Layer                                 #
##############################################################################

# debug switch
*.host[*].appl.debug = false
*.host[*].appl.headerLength = 1024bit
*.host[*].appl.burstSize = 7


##############################################################################
#       Parameters for the Network Layer                                     #
##############################################################################
*.host[*].netwl.headerLength = 32bit# in bits
*.host[*].netwl.debug = false
*.host[*].netwl.notAffectedByHostState = true

##############################################################################
#       Parameters for ARP
##############################################################################
*.host[*].arp.debug = 0

##############################################################################
#       Parameters for the Mac Layer                                         #
##############################################################################

# debug switch

*.host[*].nic.mac.debug = true
*.host[*].nic.mac.headerLength = 272bit
*.host[*].nic.mac.queueLength = 14
*.host[*].nic.mac.bitrate = 2E+6bps# in bits/second
*.host[*].nic.mac.autoBitrate = false

### values if no fading is modelled, gives at most 1% packet error rate
*.host[*].nic.mac.snr2Mbit = 1.46dB   
*.host[*].nic.mac.snr5Mbit = 2.6dB
*.host[*].nic.mac.snr11Mbit = 5.68dB

*.host[*].nic.mac.rtsCtsThreshold = 0
*.host[*].nic.mac.neighborhoodCacheSize = 30
*.host[*].nic.mac.neighborhoodCacheMaxAge = 100s

*.host[*].nic.mac.notAffectedByHostState = true

##############################################################################
#       Parameters for the SnrEval                                           #
##############################################################################

# debug switch
*.host[*].nic.phy.debug = true
*.host[*].nic.phy.coreDebug = true
*.host[*].nic.phy.publishRSSIAlways = 0
*.host[*].nic.phy.headerLength = 192bit
*.host[*].nic.phy.transmitterPower = 110.11# [mW]
*.host[*].nic.phy.carrierFrequency = 2.4E+9
*.host[*].nic.phy.thermalNoise = -110dBm
*.host[*].nic.phy.sensitivity = -119.5dBm
*.host[*].nic.phy.pathLossAlpha = 4

##############################################################################
#       Battery consumption parameters (NIC, battery, batteryStats)x
##############################################################################

*.host[*].batteryStats.debug = true# 	
*.host[*].batteryStats.detail = true# 	
*.host[*].batteryStats.timeSeries = true# 	

*.host[*].battery.numDevices = 1    # every change
*.host[*].battery.publishDelta = 0    # every change
*.host[*].battery.publishTime = 0     # no timeout

*.host[*].battery.debug = true           
*.host[*].battery.resolution = 1.0s   # lifetime precision
*.host[*].battery.voltage = 1V        # BatteryModule2.0 has no voltage
*.host[*].battery.capacity = 5.555555555555555 mAh # equiv to 20/30K in AFOrig
*.host[*].battery.nominal = 8.333333333333334 mAh# 


# NIC parameters relatively prime for test case...
*.host[*].nic.sleepCurrent = 3mA
*.host[*].nic.rxCurrent = 5mA
*.host[*].nic.decodingCurrentDelta = 2mA
*.host[*].nic.txCurrent = 11mA
*.host[*].nic.rxTxCurrent = 0mA # no radio switching times
*.host[*].nic.txRxCurrent = 0mA # no radio switching times
*.host[*].nic.setupRxCurrent = 0mA # no radio switching times
*.host[*].nic.setupTxCurrent = 0mA # no radio switching times

*.world.playgroundSizeZ = 0m
*.host[*].mobility.initialZ = 0m
*.host[*].netwl.stats = false
*.host[*].nic.mac.txPower = 110.11mW 
*.host[*].nic.phy.usePropagationDelay = false 
*.host[*].nic.phy.useThermalNoise = true
*.host[*].nic.phy.analogueModels = xmldoc("config.xml")
*.host[*].nic.phy.decider = xmldoc("config.xml")
*.host[*].nic.phy.maxTXPower = 110.11mW
*.host[*].nic.phy.timeRXToTX = 0
*.host[*].nic.phy.timeRXToSleep = 0
*.host[*].nic.phy.timeTXToRX = 0
*.host[*].nic.phy.timeTXToSleep = 0
*.host[*].nic.phy.timeSleepToRX = 0
*.host[*].nic.phy.timeSleepToTX = 0
*.host[*].nic.phy.initialRadioState = 0


##############################################################################
#       Test runs
##############################################################################


# two hosts in range, each sends one bcast and one unicast reply
[Config One]
output-vector-file = omnetpp_1.vec
*.numHosts = 2
*.host[0].mobility.initialY = 100m
*.host[0].mobility.initialX = 100m
*.host[1].mobility.initialY = 150m
*.host[1].mobility.initialX = 100m
*.host[*].appl.burstSize = 1
sim-time-limit = 10s

# two hosts out of range; each sends one broadcast, frame not detected
[Config Two]
output-vector-file = omnetpp_2.vec
*.numHosts = 2
*.host[0].mobility.initialY = 100m
*.host[0].mobility.initialX = 100m
*.host[1].mobility.initialY = 400m
*.host[1].mobility.initialX = 400	m
*.host[*].appl.burstSize = 1
sim-time-limit = 10s

# two hosts out of range; each sends one broadcast, only error is received
[Config Three]
output-vector-file = omnetpp_3.vec
*.numHosts = 2
*.host[0].mobility.initialY = 100m
*.host[0].mobility.initialX = 100m
*.host[1].mobility.initialY = 350m
*.host[1].mobility.initialX = 100m
*.host[*].appl.burstSize = 1
sim-time-limit = 10s

# check battery depletion and host failure notification (no depletion)

[Config Four]
output-vector-file = omnetpp_4.vec
*.numHosts = 3
*.host[0].mobility.initialY = 100m
*.host[0].mobility.initialX = 100m
*.host[1].mobility.initialY = 150m
*.host[1].mobility.initialX = 100m
*.host[2].mobility.initialY = 100m
*.host[2].mobility.initialX = 150m
*.host[*].appl.debug = true
*.host[*].appl.burstSize = 100
*.host[*].nic.mac.queueLength = 301
*.host[*].battery.nominal = 1.0 mAh # 
*.host[2].battery.capacity = 1.0 mAh #  battery will be not depleted
*.host[*].battery.capacity = 1.0 mAh # 
*.host[*].nic.decodingCurrentDelta = 1695mA # 1700-5  
*.host[*].nic.txCurrent = 2100mA      

*.host[*].batteryStats.capacity(relative).vector-recording = true
*.host[*].battery.publishDelta = 1            # no
*.host[*].battery.publishTime = 0.1s           # 
sim-time-limit = 10s

# check battery depletion and host failure notification (depleted early)
[Config Five]
output-vector-file = omnetpp_5.vec
*.numHosts = 3
*.host[0].mobility.initialY = 100m
*.host[0].mobility.initialX = 100m
*.host[1].mobility.initialY = 150m
*.host[1].mobility.initialX = 100m
*.host[2].mobility.initialY = 100m
*.host[2].mobility.initialX = 150m
*.host[*].appl.debug = true
*.host[*].appl.burstSize = 100
*.host[*].nic.mac.queueLength = 301
*.host[*].battery.nominal = 1.0mAh # 
*.host[2].battery.capacity = 0.1mAh #  battery depleted before its burst
*.host[*].battery.capacity = 1.0mAh # 
*.host[*].nic.decodingCurrentDelta = 1695mA # 1700-5        
*.host[*].nic.txCurrent = 2100mA      
sim-time-limit = 10s


# check battery depletion and host failure notification (depleted late)
[Config Six]
output-vector-file = omnetpp_6.vec
*.numHosts = 3
*.host[0].mobility.initialY = 100m
*.host[0].mobility.initialX = 100m
*.host[1].mobility.initialY = 150m
*.host[1].mobility.initialX = 100m
*.host[2].mobility.initialY = 100m
*.host[2].mobility.initialX = 150m
*.host[*].appl.debug = true
*.host[*].appl.burstSize = 100
*.host[*].nic.mac.queueLength = 301
*.host[*].battery.nominal = 1.0mAh # 
*.host[2].battery.capacity = 0.3mAh #  battery depleted after its burst
*.host[*].battery.capacity = 1.0mAh # 
*.host[*].nic.decodingCurrentDelta = 1695mA # 1700-5              
*.host[*].nic.txCurrent = 2100mA        
sim-time-limit = 10s

# check battery depletion and host failure notification (during idle)
[Config Seven]

output-vector-file = omnetpp_7.vec
*.numHosts = 3
*.host[0].mobility.initialY = 100m
*.host[0].mobility.initialX = 100m
*.host[1].mobility.initialY = 150m
*.host[1].mobility.initialX = 100m
*.host[2].mobility.initialY = 100m
*.host[2].mobility.initialX = 150m
*.host[*].appl.debug = true
*.host[*].appl.burstSize = 1
*.host[*].nic.mac.queueLength = 301
*.host[*].battery.resolution = 0.1s   # precision of host lifetime
*.host[*].battery.nominal = 1.0mAh # 
*.host[2].battery.capacity = 0.5mAh #  
*.host[*].battery.capacity = 1.0mAh # 
*.host[*].nic.rxCurrent = 500mA #  
*.host[*].nic.decodingCurrentDelta = -499mA # 1-500
*.host[*].nic.txCurrent = 2mA
sim-time-limit = 10s


# compare with AFTest (when idle and rxCurrent are equal, should be equivalent)
[Config Eight]
*.host[*].nic.rxCurrent = 8mA
*.host[*].nic.decodingCurrentDelta = 0mA
*.host[*].nic.txCurrent = 8mA
*.host[*].battery.publishDelta = 1            # none
*.host[*].battery.publishTime = 0.250s         # 20 hosts * 4 data/sec * 500 sec
*.host[*].batteryStats.capacity(relative).vector-recording = true
output-vector-file = omnetpp_80211.vec

# 802.11 with realistic battery and nic parameters (see also networks/80211Battery)
[Config Nine]
# appl parameters
*.host[*].appl.burstSize = 10
*.host[*].nic.mac.queueLength = 50

# Marvell 88W8686 low power IEEE 802.11 chipset
#include omnetpp_wifi_lowpow.ini
# SAMPLE battery consumption parameters for a low-power wi-fi device

# Marvell 88W8686 low power IEEE 802.11 chipset 
# see e.g. http://imote2-linux.wiki.sourceforge.net/UCAM-WSB100
# here we treat all components as 3V

*.host[*].nic.sleepCurrent =  .85 mA
*.host[*].nic.rxCurrent =   172 mA
*.host[*].nic.decodingCurrentDelta = 28 mA   # 200-172
*.host[*].nic.txCurrent =     153 mA

# Marvell 88W8686 spec  gives 14dBm max for CCK  
# leave at 20dBm from original omnetpp.ini; unclear how to translate
# other parameters (e.g. sensitivity)
# *.host[*].nic.snrEval.transmitterPower = 25 ; mW

# G1 Android-phone battery 
# note that the G1 actually uses a qualcomm chip, but smartphone is a
# plausible low power wi-fi scenario

*.host[*].battery.voltage =   3 V
*.host[*].battery.capacity =  1150 mAh
*.host[*].battery.nominal =   1150 mAh

# output parameters
output-vector-file = omnetpp.10.vec
*.host[*].batteryStats.capacity(relative).vector-recording = true
*.host[*].battery.resolution = 1.0s   # precision of host lifetime
*.host[*].battery.publishDelta = 1    # none
*.host[*].battery.publishTime = 0.250s# ;       
sim-time-limit = 15s

# 5x burst size compared to previous run, check that SEND and RECV 
# energy also larger
[Config Ten]

# appl parameters
*.host[*].appl.burstSize = 50
*.host[*].nic.mac.queueLength = 250

# Marvell 88W8686 low power IEEE 802.11 chipset
#include omnetpp_wifi_lowpow.ini
# SAMPLE battery consumption parameters for a low-power wi-fi device

# Marvell 88W8686 low power IEEE 802.11 chipset 
# see e.g. http://imote2-linux.wiki.sourceforge.net/UCAM-WSB100
# here we treat all components as 3V

*.host[*].nic.sleepCurrent =  .85 mA
*.host[*].nic.rxCurrent =   172 mA
*.host[*].nic.decodingCurrentDelta = 28 mA  # 200-172
*.host[*].nic.txCurrent =     153 mA

# Marvell 88W8686 spec  gives 14dBm max for CCK  
# leave at 20dBm from original omnetpp.ini; unclear how to translate
# other parameters (e.g. sensitivity)
# *.host[*].nic.snrEval.transmitterPower = 25 ; mW

# G1 Android-phone battery 
# note that the G1 actually uses a qualcomm chip, but smartphone is a
# plausible low power wi-fi scenario

*.host[*].battery.voltage =   3 V
*.host[*].battery.capacity =  1150 mAh
*.host[*].battery.nominal =   1150 mAh


# output parameters
output-vector-file = omnetpp.50.vec
*.host[*].batteryStats.capacity(relative).vector-recording = true
*.host[*].battery.resolution = 1.0s   # precision of host lifetime
*.host[*].battery.publishDelta = 1    # none
*.host[*].battery.publishTime = 0.250s  
sim-time-limit = 15s
